{"version":3,"sources":["webpack:///./src/mixins/WidgetMixin.js","webpack:///./src/components/Widgets/HealthChecks.vue?b26a","webpack:///./src/components/Widgets/HealthChecks.vue?874a","webpack:///./src/components/Widgets/HealthChecks.vue","webpack:///src/components/Widgets/HealthChecks.vue","webpack:///./src/components/Widgets/HealthChecks.vue?3d67","webpack:///./src/components/Widgets/HealthChecks.vue?c1fe"],"names":["WidgetMixin","props","options","type","Object","default","data","progress","Progress","color","overrideProxyChoice","overrideUpdateInterval","disableLoader","updater","defaultTimeout","mounted","this","fetchData","updateInterval","continuousUpdates","beforeDestroy","clearInterval","computed","proxyReqEndpoint","baseUrl","process","VUE_APP_DOMAIN","window","location","origin","concat","serviceEndpoints","corsProxy","useProxy","usersInterval","methods","update","startLoading","_this","setInterval","error","msg","stackTrace","ErrorHandler","ignoreErrors","$emit","start","finishLoading","_this2","setTimeout","end","tooltip","content","html","arguments","length","undefined","trigger","delay","makeRequest","endpoint","protocol","body","_this3","method","url","JSON","stringify","CustomHeaders","headers","timeout","requestConfig","Promise","resolve","reject","axios","request","then","response","success","message","catch","dataFetchError","finally","render","_vm","_c","_self","crons","staticClass","_l","cron","key","id","class","status","_v","_s","_f","directives","name","rawName","value","pingTimeTooltip","expression","desc","_e","staticRenderFns","mixins","components","filters","formatStatus","symbol","capitalize","formatDate","timestamp","timestampToDateTime","host","widgetApiEndpoints","healthChecks","apiKey","results","forEach","authHeaders","processData","sort","a","b","checks","push","slug","pingCount","n_pings","lastPing","last_ping","nextPing","next_ping","makeUrl","unique_key","cronId","base","classes","component"],"mappings":"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","file":"js/chunk-832ca55a.4b0dd5ac.js","sourcesContent":["/**\n * Mixin that all pre-built and custom widgets extend from.\n * Manages loading state, error handling, data updates and user options\n */\nimport axios from 'axios';\nimport { Progress } from 'rsup-progress';\nimport ErrorHandler from '@/utils/ErrorHandler';\nimport { serviceEndpoints } from '@/utils/defaults';\n\nconst WidgetMixin = {\n  props: {\n    options: {\n      type: Object,\n      default: {},\n    },\n  },\n  data: () => ({\n    progress: new Progress({ color: 'var(--progress-bar)' }),\n    overrideProxyChoice: false,\n    overrideUpdateInterval: null,\n    disableLoader: false, // Prevent ever showing the loader\n    updater: null, // Stores interval\n    defaultTimeout: 50000,\n  }),\n  /* When component mounted, fetch initial data */\n  mounted() {\n    this.fetchData();\n    if (this.updateInterval) {\n      this.continuousUpdates();\n      this.disableLoader = true;\n    }\n  },\n  beforeDestroy() {\n    if (this.updater) {\n      clearInterval(this.updater);\n    }\n  },\n  computed: {\n    proxyReqEndpoint() {\n      const baseUrl = process.env.VUE_APP_DOMAIN || window.location.origin;\n      return `${baseUrl}${serviceEndpoints.corsProxy}`;\n    },\n    useProxy() {\n      return this.options.useProxy || this.overrideProxyChoice;\n    },\n    /* Returns either a number in ms to continuously update widget data. Or 0 for no updates */\n    updateInterval() {\n      const usersInterval = this.options.updateInterval;\n      if (usersInterval === null && this.overrideUpdateInterval) {\n        return this.overrideUpdateInterval * 1000;\n      }\n      if (!usersInterval) return 0;\n      // If set to `true`, then default to 30 seconds\n      if (typeof usersInterval === 'boolean') return 30 * 1000;\n      // If set to a number, and within valid range, return user choice\n      if (typeof usersInterval === 'number'\n        && usersInterval >= 2\n        && usersInterval <= 7200) {\n        return usersInterval * 1000;\n      }\n      return 0;\n    },\n  },\n  methods: {\n    /* Re-fetches external data, called by parent. Usually overridden by widget */\n    update() {\n      this.startLoading();\n      this.fetchData();\n    },\n    /* If continuous updates enabled, create interval */\n    continuousUpdates() {\n      this.updater = setInterval(() => { this.update(); }, this.updateInterval);\n    },\n    /* Called when an error occurs. Logs to handler, and passes to parent component */\n    error(msg, stackTrace) {\n      ErrorHandler(msg, stackTrace);\n      if (!this.options.ignoreErrors) {\n        this.$emit('error', msg);\n      }\n    },\n    /* When a data request update starts, show loader */\n    startLoading() {\n      if (!this.disableLoader) {\n        this.$emit('loading', true);\n        this.progress.start();\n      }\n    },\n    /* When a data request finishes, hide loader */\n    finishLoading() {\n      this.$emit('loading', false);\n      setTimeout(() => { this.progress.end(); }, 500);\n    },\n    /* Overridden by child component. Will make network request, then end loader */\n    fetchData() {\n      this.finishLoading();\n    },\n    /* Used as v-tooltip, pass text content in, and will show on hover */\n    tooltip(content, html = false) {\n      return {\n        content, html, trigger: 'hover focus', delay: 250,\n      };\n    },\n    /* Makes data request, returns promise */\n    makeRequest(endpoint, options, protocol, body) {\n      // Request Options\n      const method = protocol || 'GET';\n      const url = this.useProxy ? this.proxyReqEndpoint : endpoint;\n      const data = JSON.stringify(body || {});\n      const CustomHeaders = options || null;\n      const headers = this.useProxy\n        ? { 'Target-URL': endpoint, CustomHeaders: JSON.stringify(CustomHeaders) } : CustomHeaders;\n      const timeout = this.options.timeout || this.defaultTimeout;\n      const requestConfig = {\n        method, url, headers, data, timeout,\n      };\n      // Make request\n      return new Promise((resolve, reject) => {\n        axios.request(requestConfig)\n          .then((response) => {\n            if (response.data.success === false) {\n              this.error('Proxy returned error from target server', response.data.message);\n            }\n            resolve(response.data);\n          })\n          .catch((dataFetchError) => {\n            this.error('Unable to fetch data', dataFetchError);\n            reject(dataFetchError);\n          })\n          .finally(() => {\n            this.finishLoading();\n          });\n      });\n    },\n  },\n};\n\nexport default WidgetMixin;\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HealthChecks.vue?vue&type=style&index=1&id=3d024849&prod&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HealthChecks.vue?vue&type=style&index=0&id=3d024849&prod&scoped=true&lang=scss\"","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.crons)?_c('div',{staticClass:\"health-checks-wrapper\"},[_vm._l((_vm.crons),function(cron){return [_c('div',{key:cron.id + 'status',staticClass:\"status\"},[_c('p',{class:cron.status},[_vm._v(_vm._s(_vm._f(\"formatStatus\")(cron.status)))])]),_c('div',{directives:[{name:\"tooltip\",rawName:\"v-tooltip\",value:(_vm.pingTimeTooltip(cron)),expression:\"pingTimeTooltip(cron)\"}],key:cron.id + 'info',staticClass:\"info\"},[_c('p',{staticClass:\"cron-name\"},[_vm._v(_vm._s(cron.name))]),_c('p',{staticClass:\"cron-desc\"},[_vm._v(_vm._s(cron.desc))])])]})],2):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"health-checks-wrapper\" v-if=\"crons\">\n  <template\n    v-for=\"cron in crons\"\n  >\n    <div class=\"status\" v-bind:key=\"cron.id + 'status'\">\n      <p :class=\"cron.status\">{{ cron.status | formatStatus }}</p>\n    </div>\n    <div\n      class=\"info\"\n      v-tooltip=\"pingTimeTooltip(cron)\"\n      v-bind:key=\"cron.id + 'info'\"\n    >\n      <p class=\"cron-name\">{{ cron.name }}</p>\n      <p class=\"cron-desc\">{{ cron.desc }}</p>\n    </div>\n  </template>\n</div>\n</template>\n\n<script>\nimport WidgetMixin from '@/mixins/WidgetMixin';\nimport { widgetApiEndpoints } from '@/utils/defaults';\nimport { capitalize, timestampToDateTime } from '@/utils/MiscHelpers';\n\nexport default {\n  mixins: [WidgetMixin],\n  components: {},\n  data() {\n    return {\n      crons: null,\n    };\n  },\n  filters: {\n    formatStatus(status) {\n      let symbol = '';\n      if (status === 'up') symbol = '✔';\n      if (status === 'down') symbol = '✘';\n      if (status === 'new') symbol = '❖';\n      if (status === 'paused') symbol = '⏸';\n      if (status === 'running') symbol = '▶';\n      return `${symbol} ${capitalize(status)}`;\n    },\n    formatDate(timestamp) {\n      return timestampToDateTime(timestamp);\n    },\n  },\n  computed: {\n    /* API endpoint, either for self-hosted or managed instance */\n    endpoint() {\n      if (this.options.host) return `${this.options.host}/api/v1/checks`;\n      return `${widgetApiEndpoints.healthChecks}`;\n    },\n    apiKey() {\n      if (!this.options.apiKey) {\n        this.error('An API key is required, please see the docs for more info');\n      }\n      if (typeof this.options.apiKey === 'string') {\n        return [this.options.apiKey];\n      }\n      return this.options.apiKey;\n    },\n  },\n  methods: {\n    /* Make GET request to CoinGecko API endpoint */\n    fetchData() {\n      this.overrideProxyChoice = true;\n      const results = [];\n      this.apiKey.forEach((key) => {\n        const authHeaders = { 'X-Api-Key': key };\n        this.makeRequest(this.endpoint, authHeaders).then(\n          (response) => { this.processData(response, results); },\n        );\n      });\n      results.sort((a, b) => ((a.name > b.name) ? 1 : -1));\n      this.crons = results;\n    },\n    /* Assign data variables to the returned data */\n    processData(data, results) {\n      data.checks.forEach((cron) => {\n        results.push({\n          id: cron.slug,\n          name: cron.name,\n          desc: cron.desc,\n          status: cron.status,\n          pingCount: cron.n_pings,\n          lastPing: cron.last_ping,\n          nextPing: cron.next_ping,\n          url: this.makeUrl(cron.unique_key),\n        });\n      });\n      return results;\n    },\n    makeUrl(cronId) {\n      const base = this.options.host || 'https://healthchecks.io';\n      return `${base}/checks/${cronId}/details`;\n    },\n    pingTimeTooltip(cron) {\n      const { lastPing, nextPing, pingCount } = cron;\n      const content = `<b>Total number of Pings:</b> ${pingCount}<br>`\n        + `<b>Last Ping:</b> ${timestampToDateTime(lastPing)}<br>`\n        + `<b>Next Ping:</b>${timestampToDateTime(nextPing)}`;\n      return {\n        content, html: true, trigger: 'hover focus', delay: 250, classes: 'ping-times-tt',\n      };\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.health-checks-wrapper {\n  display: grid;\n  justify-content: center;\n  grid-template-columns: 1fr 2fr;\n  color: var(--widget-text-color);\n  padding: 0.25rem 0;\n  .status {\n    min-width: 5rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    p {\n      margin: 0;\n      color: var(--info);\n      &.up { color: var(--success); }\n      &.down { color: var(--danger); }\n      &.new { color: var(--widget-text-color); }\n      &.running { color: var(--warning); }\n      &.paused { color: var(--info); }\n    }\n  }\n  .info {\n    p.cron-name {\n      margin: 0.25rem 0;\n      font-weight: bold;\n      color: var(--widget-text-color);\n    }\n    p.cron-desc {\n      margin: 0;\n      color: var(--widget-text-color);\n      opacity: var(--dimming-factor);\n    }\n  }\n  &:not(:last-child) {\n    border-bottom: 1px dashed var(--widget-text-color);\n  }\n}\n\n</style>\n\n<style lang=\"scss\">\n.ping-times-tt {\n  min-width: 20rem;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HealthChecks.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HealthChecks.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./HealthChecks.vue?vue&type=template&id=3d024849&scoped=true\"\nimport script from \"./HealthChecks.vue?vue&type=script&lang=js\"\nexport * from \"./HealthChecks.vue?vue&type=script&lang=js\"\nimport style0 from \"./HealthChecks.vue?vue&type=style&index=0&id=3d024849&prod&scoped=true&lang=scss\"\nimport style1 from \"./HealthChecks.vue?vue&type=style&index=1&id=3d024849&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3d024849\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}