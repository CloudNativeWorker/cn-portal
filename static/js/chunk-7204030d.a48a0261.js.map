{"version":3,"sources":["webpack:///./src/components/Widgets/StockPriceChart.vue","webpack:///src/components/Widgets/StockPriceChart.vue","webpack:///./src/components/Widgets/StockPriceChart.vue?8ee3","webpack:///./src/components/Widgets/StockPriceChart.vue?d764","webpack:///./src/components/Widgets/StockPriceChart.vue?808a"],"names":["render","_vm","this","_c","_self","staticClass","attrs","chartId","staticRenderFns","mixins","WidgetMixin","ChartingMixin","components","data","chartData","chartDom","computed","stock","options","interval","concat","apiKey","endpoint","func","widgetApiEndpoints","stockPriceChart","dataPoints","userChoice","usersChoice","Math","round","random","priceTime","methods","generateChart","Chart","title","type","height","chartHeight","colors","chartColors","truncateLegends","lineOptions","regionFill","hideDots","axisOptions","xIsSeries","xAxisMode","tooltipOptions","formatTooltipY","d","fetchData","_this","axios","get","then","response","note","error","Note","processData","catch","finally","finishLoading","_this2","priceLabels","priceValues","dataKey","rawMarketData","Object","keys","length","forEach","timeGroup","index","push","formatDate","formatPrice","labels","reverse","datasets","name","values","renderChart","timestamp","localFormat","navigator","language","dateFormat","weekday","day","month","Date","toLocaleDateString","priceStr","price","parseFloat","numDecimals","toFixed","component"],"mappings":"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","file":"js/chunk-7204030d.a48a0261.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"crypto-price-chart\",attrs:{\"id\":_vm.chartId}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"crypto-price-chart\" :id=\"chartId\"></div>\n</template>\n\n<script>\nimport { Chart } from 'frappe-charts/dist/frappe-charts.min.esm';\nimport axios from 'axios';\nimport WidgetMixin from '@/mixins/WidgetMixin';\nimport ChartingMixin from '@/mixins/ChartingMixin';\nimport { widgetApiEndpoints } from '@/utils/defaults';\n\nexport default {\n  mixins: [WidgetMixin, ChartingMixin],\n  components: {},\n  data() {\n    return {\n      chartData: null,\n      chartDom: null,\n    };\n  },\n  computed: {\n    /* The stock or share asset symbol to fetch data for */\n    stock() {\n      return this.options.stock;\n    },\n    /* The time interval between data points, in minutes */\n    interval() {\n      return `${(this.options.interval || 30)}min`;\n    },\n    /* The users API key for AlphaVantage */\n    apiKey() {\n      return this.options.apiKey;\n    },\n    /* The formatted GET request API endpoint to fetch stock data from */\n    endpoint() {\n      const func = 'TIME_SERIES_INTRADAY';\n      return `${widgetApiEndpoints.stockPriceChart}?function=${func}`\n      + `&symbol=${this.stock}&interval=${this.interval}&apikey=${this.apiKey}`;\n    },\n    /* The number of data points to render on the chart */\n    dataPoints() {\n      const userChoice = this.options.dataPoints;\n      if (typeof usersChoice === 'number' && userChoice < 100 && userChoice > 5) {\n        return userChoice;\n      }\n      return 30;\n    },\n    /* A sudo-random ID for the chart DOM element */\n    chartId() {\n      return `stock-price-chart-${Math.round(Math.random() * 10000)}`;\n    },\n    /* Which price for each interval should be used (API requires in stupid format) */\n    priceTime() {\n      const usersChoice = this.options.priceTime || 'high';\n      switch (usersChoice) {\n        case ('open'): return '1. open';\n        case ('high'): return '2. high';\n        case ('low'): return '3. low';\n        case ('close'): return '4. close';\n        case ('volume'): return '5. volume';\n        default: return '2. high';\n      }\n    },\n  },\n  methods: {\n    /* Create new chart, using the crypto data */\n    generateChart() {\n      return new Chart(`#${this.chartId}`, {\n        title: `${this.stock} Price Chart`,\n        data: this.chartData,\n        type: 'axis-mixed',\n        height: this.chartHeight,\n        colors: this.chartColors,\n        truncateLegends: true,\n        lineOptions: {\n          regionFill: 1,\n          hideDots: 1,\n        },\n        axisOptions: {\n          xIsSeries: true,\n          xAxisMode: 'tick',\n        },\n        tooltipOptions: {\n          formatTooltipY: d => `$${d}`,\n        },\n      });\n    },\n    /* Make GET request to CoinGecko API endpoint */\n    fetchData() {\n      axios.get(this.endpoint)\n        .then((response) => {\n          if (response.data.note) {\n            this.error('API Error', response.data.Note);\n          } else if (response.data['Error Message']) {\n            this.error('API Error', response.data['Error Message']);\n          } else {\n            this.processData(response.data);\n          }\n        })\n        .catch((error) => {\n          this.error('Unable to fetch stock price data', error);\n        })\n        .finally(() => {\n          this.finishLoading();\n        });\n    },\n    /* Convert data returned by API into a format that can be consumed by the chart\n     * To improve efficiency, only a certain amount of data points are plotted\n     */\n    processData(data) {\n      const priceLabels = [];\n      const priceValues = [];\n      const dataKey = `Time Series (${this.interval})`;\n      const rawMarketData = data[dataKey];\n      const interval = Math.round(Object.keys(rawMarketData).length / this.dataPoints);\n      Object.keys(rawMarketData).forEach((timeGroup, index) => {\n        if (index % interval === 0) {\n          priceLabels.push(this.formatDate(timeGroup));\n          priceValues.push(this.formatPrice(rawMarketData[timeGroup][this.priceTime]));\n        }\n      });\n      // // Combine results with chart config\n      this.chartData = {\n        labels: priceLabels.reverse(),\n        datasets: [\n          { name: `Price ${this.priceTime}`, type: 'bar', values: priceValues.reverse() },\n        ],\n      };\n      // // Call chart render function\n      this.renderChart();\n    },\n    /* Uses class data to render the line chart */\n    renderChart() {\n      this.chartDom = this.generateChart();\n    },\n    /* Format the date for a given time stamp, also include time if required */\n    formatDate(timestamp) {\n      const localFormat = navigator.language;\n      const dateFormat = { weekday: 'short', day: 'numeric', month: 'short' };\n      return new Date(timestamp).toLocaleDateString(localFormat, dateFormat);\n    },\n    /* Format the price, rounding to given number of decimal places */\n    formatPrice(priceStr) {\n      const price = parseFloat(priceStr);\n      let numDecimals = 0;\n      if (price < 10) numDecimals = 1;\n      if (price < 1) numDecimals = 2;\n      if (price < 0.1) numDecimals = 3;\n      if (price < 0.01) numDecimals = 4;\n      if (price < 0.001) numDecimals = 5;\n      return price.toFixed(numDecimals);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.crypto-price-chart .chart-container {\n  text.title {\n    text-transform: capitalize;\n    color: var(--widget-text-color);\n  }\n  .axis, .chart-label {\n    fill: var(--widget-text-color);\n    opacity: var(--dimming-factor);\n    &:hover { opacity: 1; }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StockPriceChart.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StockPriceChart.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./StockPriceChart.vue?vue&type=template&id=bd6723b2\"\nimport script from \"./StockPriceChart.vue?vue&type=script&lang=js\"\nexport * from \"./StockPriceChart.vue?vue&type=script&lang=js\"\nimport style0 from \"./StockPriceChart.vue?vue&type=style&index=0&id=bd6723b2&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StockPriceChart.vue?vue&type=style&index=0&id=bd6723b2&prod&lang=scss\""],"sourceRoot":""}