{"version":3,"sources":["webpack:///./src/components/Widgets/GlNetworkTraffic.vue?7803","webpack:///./src/components/Widgets/GlNetworkTraffic.vue","webpack:///src/components/Widgets/GlNetworkTraffic.vue","webpack:///./src/components/Widgets/GlNetworkTraffic.vue?ad70","webpack:///./src/components/Widgets/GlNetworkTraffic.vue?acd0","webpack:///./src/mixins/GlancesMixin.js"],"names":["render","_vm","this","_c","_self","staticClass","attrs","chartId","staticRenderFns","mixins","WidgetMixin","GlancesMixin","ChartingMixin","components","data","computed","limit","options","endpoint","makeGlancesUrl","concat","methods","processData","trafficData","_this","preliminary","upload","download","Object","keys","forEach","keyName","upOrDown","includes","dataPoint","dataTime","getRoundedTime","timeLabels","uploadData","downloadData","startDate","date","push","timestampToTime","datasets","name","type","values","chartTitle","makeTitle","generateChart","labels","roundTo","Date","Math","round","getTime","getTimeAgo","replace","timeChartData","Chart","title","height","chartHeight","colors","truncateLegends","lineOptions","regionFill","hideDots","axisOptions","xIsSeries","xAxisMode","tooltipOptions","formatTooltipY","d","convertBytes","created","overrideUpdateInterval","component","hostname","error","apiVersion","credentials","username","password","stringifiedUser","Authorization","window","btoa","fetchData","makeRequest","then","apiPath"],"mappings":"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","file":"js/chunk-72e3b16c.b60be97b.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GlNetworkTraffic.vue?vue&type=style&index=0&id=0baa6091&prod&scoped=true&lang=scss\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"glances-cpu-history-wrapper\"},[_c('div',{staticClass:\"gl-history-chart\",attrs:{\"id\":_vm.chartId}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"glances-cpu-history-wrapper\">\n  <div class=\"gl-history-chart\" :id=\"chartId\"></div>\n</div>\n</template>\n\n<script>\nimport WidgetMixin from '@/mixins/WidgetMixin';\nimport GlancesMixin from '@/mixins/GlancesMixin';\nimport ChartingMixin from '@/mixins/ChartingMixin';\nimport { convertBytes, getTimeAgo, timestampToTime } from '@/utils/MiscHelpers';\n\nexport default {\n  mixins: [WidgetMixin, GlancesMixin, ChartingMixin],\n  components: {},\n  data() {\n    return {};\n  },\n  computed: {\n    limit() {\n      return this.options.limit || 100;\n    },\n    endpoint() {\n      return this.makeGlancesUrl(`network/history/${this.limit}`);\n    },\n  },\n  methods: {\n    processData(trafficData) {\n      const preliminary = {\n        upload: [],\n        download: [],\n      };\n      /* eslint-disable prefer-destructuring */\n      Object.keys(trafficData).forEach((keyName) => {\n        let upOrDown = null;\n        if (keyName.includes('_tx')) upOrDown = 'up';\n        else if (keyName.includes('_rx')) upOrDown = 'down';\n        trafficData[keyName].forEach((dataPoint) => {\n          const dataTime = this.getRoundedTime(dataPoint[0]);\n          if (upOrDown === 'up') {\n            if (preliminary.upload[dataTime]) preliminary.upload[dataTime] += dataPoint[1];\n            else preliminary.upload[dataTime] = dataPoint[1];\n          } else if (upOrDown === 'down') {\n            if (preliminary.download[dataTime]) preliminary.download[dataTime] += dataPoint[1];\n            else preliminary.download[dataTime] = dataPoint[1];\n          }\n        });\n      });\n      const timeLabels = [];\n      const uploadData = [];\n      const downloadData = [];\n      const startDate = Object.keys(preliminary.upload)[0];\n      Object.keys(preliminary.upload).forEach((date) => {\n        timeLabels.push(timestampToTime(date));\n        uploadData.push(preliminary.upload[date]);\n      });\n      Object.keys(preliminary.download).forEach((date) => {\n        downloadData.push(preliminary.download[date]);\n      });\n      const datasets = [\n        { name: 'Upload', type: 'bar', values: uploadData },\n        { name: 'Download', type: 'bar', values: downloadData },\n      ];\n      const chartTitle = this.makeTitle(startDate);\n      this.generateChart({ labels: timeLabels, datasets }, chartTitle);\n    },\n    getRoundedTime(date) {\n      const roundTo = 1000 * 60;\n      return new Date(Math.round(new Date(date).getTime() / roundTo) * roundTo);\n    },\n    makeTitle(startDate) {\n      return `Network Activity over past ${getTimeAgo(startDate).replace('ago', '')}`;\n    },\n    generateChart(timeChartData, chartTitle) {\n      return new this.Chart(`#${this.chartId}`, {\n        title: chartTitle,\n        data: timeChartData,\n        type: 'axis-mixed',\n        height: this.chartHeight,\n        colors: ['#f6f000', '#04e4f4'],\n        truncateLegends: true,\n        lineOptions: {\n          regionFill: 1,\n          hideDots: 1,\n        },\n        axisOptions: {\n          xIsSeries: true,\n          xAxisMode: 'tick',\n        },\n        tooltipOptions: {\n          formatTooltipY: d => convertBytes(d),\n        },\n      });\n    },\n\n  },\n  created() {\n    this.overrideUpdateInterval = 10;\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.glances-cpu-history-wrapper {\n  .gl-history-chart {}\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GlNetworkTraffic.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GlNetworkTraffic.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./GlNetworkTraffic.vue?vue&type=template&id=0baa6091&scoped=true\"\nimport script from \"./GlNetworkTraffic.vue?vue&type=script&lang=js\"\nexport * from \"./GlNetworkTraffic.vue?vue&type=script&lang=js\"\nimport style0 from \"./GlNetworkTraffic.vue?vue&type=style&index=0&id=0baa6091&prod&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0baa6091\",\n  null\n  \n)\n\nexport default component.exports","/** Reusable mixin for all Glances widgets */\nexport default {\n  computed: {\n    /* Required, hostname (e.g. IP + port) for Glances instance */\n    hostname() {\n      if (!this.options.hostname) this.error('You must specify a \\'hostname\\' for Glances');\n      return this.options.hostname;\n    },\n    /* Optionally specify the API version, defaults to V 3 */\n    apiVersion() {\n      return this.options.apiVersion || 3;\n    },\n    /* Optionally specify basic auth credentials for Glances instance */\n    credentials() {\n      if (this.options.username && this.options.password) {\n        const stringifiedUser = `${this.options.username}:${this.options.password}`;\n        return { Authorization: `Basic ${window.btoa(stringifiedUser)}` };\n      }\n      return null;\n    },\n  },\n  methods: {\n    /* Make the request to Glances API, and calls handler function with results\n    * Requires endpoint attribute and processData method to be implemented by child */\n    fetchData() {\n      this.makeRequest(this.endpoint, this.credentials).then(this.processData);\n    },\n    /* Returns URL to Glances API endpoint */\n    makeGlancesUrl(apiPath) {\n      return `${this.hostname}/api/${this.apiVersion}/${apiPath}`;\n    },\n  },\n};\n"],"sourceRoot":""}