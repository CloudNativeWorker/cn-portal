{"version":3,"sources":["webpack:///./src/components/Widgets/CovidStats.vue","webpack:///src/components/Widgets/CovidStats.vue","webpack:///./src/components/Widgets/CovidStats.vue?eafd","webpack:///./src/components/Widgets/CovidStats.vue?e4ec","webpack:///./src/components/Widgets/CovidStats.vue?dace"],"names":["render","_vm","this","_c","_self","staticClass","basicStats","_v","_s","_f","active","cases","recovered","deaths","_e","showChart","attrs","chartId","countryData","_l","country","key","name","flag","staticRenderFns","mixins","WidgetMixin","ChartingMixin","computed","options","showCountries","countries","numDays","limit","basicStatsEndpoint","concat","widgetApiEndpoints","covidStats","timeSeriesEndpoint","countryInfoEndpoint","data","filters","numberFormat","caseNumber","putCommasInBigNum","showInK","showNumAsThousand","methods","fetchData","makeRequest","then","processBasicStats","processTimeSeries","processCountryInfo","_this","forEach","iso","countryInfo","iso3","includes","push","slice","timeLabels","Object","keys","totalCases","totalDeaths","totalRecovered","date","chartData","labels","datasets","type","values","Chart","title","height","chartHeight","colors","truncateLegends","lineOptions","hideDots","axisOptions","xIsSeries","xAxisMode","tooltipOptions","formatTooltipY","d","formatTooltipX","timestampToDate","component"],"mappings":"gKAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAAEJ,EAAIK,WAAYH,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,MAAM,CAACE,YAAY,0BAA0B,CAACF,EAAG,OAAO,CAACE,YAAY,OAAO,CAACJ,EAAIM,GAAG,kBAAkBJ,EAAG,OAAO,CAACE,YAAY,OAAO,CAACJ,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,GAAG,eAAPR,CAAuBA,EAAIK,WAAWI,cAAcP,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,OAAO,CAACE,YAAY,OAAO,CAACJ,EAAIM,GAAG,qBAAqBJ,EAAG,OAAO,CAACE,YAAY,aAAa,CAACJ,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,GAAG,eAAPR,CAAuBA,EAAIK,WAAWK,aAAaR,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,OAAO,CAACE,YAAY,OAAO,CAACJ,EAAIM,GAAG,qBAAqBJ,EAAG,OAAO,CAACE,YAAY,iBAAiB,CAACJ,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,GAAG,eAAPR,CAAuBA,EAAIK,WAAWM,iBAAiBT,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,OAAO,CAACE,YAAY,OAAO,CAACJ,EAAIM,GAAG,kBAAkBJ,EAAG,OAAO,CAACE,YAAY,cAAc,CAACJ,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,GAAG,eAAPR,CAAuBA,EAAIK,WAAWO,kBAAkBZ,EAAIa,KAAMb,EAAIc,UAAWZ,EAAG,MAAM,CAACE,YAAY,qBAAqBW,MAAM,CAAC,GAAKf,EAAIgB,WAAWhB,EAAIa,KAAMb,EAAIiB,YAAaf,EAAG,MAAM,CAACE,YAAY,gBAAgBJ,EAAIkB,GAAIlB,EAAIiB,aAAa,SAASE,GAAS,OAAOjB,EAAG,MAAM,CAACkB,IAAID,EAAQE,KAAKjB,YAAY,eAAe,CAACF,EAAG,IAAI,CAACE,YAAY,QAAQ,CAACF,EAAG,MAAM,CAACE,YAAY,OAAOW,MAAM,CAAC,IAAMI,EAAQG,KAAK,IAAM,UAAUtB,EAAIM,GAAG,IAAIN,EAAIO,GAAGY,EAAQE,MAAM,OAAOnB,EAAG,MAAM,CAACE,YAAY,qBAAqB,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,OAAO,CAACE,YAAY,OAAO,CAACJ,EAAIM,GAAG,eAAeJ,EAAG,OAAO,CAACE,YAAY,aAAa,CAACJ,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,GAAG,UAAPR,CAAkBmB,EAAQT,aAAaR,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,OAAO,CAACE,YAAY,OAAO,CAACJ,EAAIM,GAAG,eAAeJ,EAAG,OAAO,CAACE,YAAY,iBAAiB,CAACJ,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,GAAG,UAAPR,CAAkBmB,EAAQR,iBAAiBT,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,OAAO,CAACE,YAAY,OAAO,CAACJ,EAAIM,GAAG,YAAYJ,EAAG,OAAO,CAACE,YAAY,cAAc,CAACJ,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,GAAG,UAAPR,CAAkBmB,EAAQP,qBAAoB,GAAGZ,EAAIa,QAE19DU,EAAkB,G,kICsDP,GACfC,OAAA,CAAAC,OAAAC,QACAC,SAAA,CACAb,UAAA,WACA,YAAAc,QAAAd,YAAA,GAEAe,cAAA,WACA,aAAAD,QAAAE,WACA,KAAAF,QAAAC,eAEAE,QAAA,WACA,YAAAH,QAAAG,SAAA,KAEAD,UAAA,WACA,YAAAF,QAAAE,WAEAE,MAAA,WACA,YAAAJ,QAAAI,OAAA,IAEAC,mBAAA,WACA,SAAAC,OAAAC,wBAAAC,WAAA,SAEAC,mBAAA,WACA,SAAAH,OAAAC,wBAAAC,WAAA,6BAAAF,OAAA,KAAAH,UAEAO,oBAAA,WACA,oDAGAC,KAAA,WACA,OACAlC,WAAA,KACAY,YAAA,OAGAuB,QAAA,CACAC,aAAA,SAAAC,GACA,OAAAC,eAAAD,IAEAE,QAAA,SAAAF,GACA,OAAAG,eAAAH,KAGAI,QAAA,CACAC,UAAA,WACA,KAAAC,YAAA,KAAAf,oBAAAgB,KAAA,KAAAC,mBACA,KAAApC,WACA,KAAAkC,YAAA,KAAAX,oBAAAY,KAAA,KAAAE,mBAEA,KAAAtB,eACA,KAAAmB,YAAA,KAAAV,qBAAAW,KAAA,KAAAG,qBAGAF,kBAAA,SAAAX,GACA,KAAAlC,WAAAkC,GAEAa,mBAAA,SAAAb,GAAA,IAAAc,EAAA,KACApC,EAAA,GACAsB,EAAAe,SAAA,SAAAnC,GACA,IAAAoC,EAAApC,EAAAqC,YAAAC,KACAJ,EAAAvB,YAAAuB,EAAAvB,UAAA4B,SAAAH,IACAtC,EAAA0C,KAAA,CACAtC,KAAAF,UACAG,KAAAH,EAAAqC,YAAAlC,KACAZ,MAAAS,EAAAT,MACAE,OAAAO,EAAAP,OACAD,UAAAQ,EAAAR,eAIA,KAAAM,cAAA2C,MAAA,OAAA5B,QAEAmB,kBAAA,SAAAZ,GACA,IAAAsB,EAAAC,OAAAC,KAAAxB,EAAA7B,OACAsD,EAAA,GACAC,EAAA,GACAC,EAAA,GACAL,EAAAP,SAAA,SAAAa,GACAH,EAAAL,KAAApB,EAAA7B,MAAAyD,IACAF,EAAAN,KAAApB,EAAA3B,OAAAuD,IACAD,EAAAP,KAAApB,EAAA5B,UAAAwD,OAEA,IAAAC,EAAA,CACAC,OAAAR,EACAS,SAAA,CACA,CAAAjD,KAAA,QAAAkD,KAAA,MAAAC,OAAAR,GACA,CAAA3C,KAAA,YAAAkD,KAAA,MAAAC,OAAAN,GACA,CAAA7C,KAAA,SAAAkD,KAAA,MAAAC,OAAAP,KAGA,gBAAAQ,MAAA,IAAAvC,OAAA,KAAAlB,SAAA,CACA0D,MAAA,+BACAnC,KAAA6B,EACAG,KAAA,aACAI,OAAA,KAAAC,YACAC,OAAA,gCACAC,iBAAA,EACAC,YAAA,CACAC,SAAA,GAEAC,YAAA,CACAC,WAAA,EACAC,UAAA,QAEAC,eAAA,CACAC,eAAA,SAAAC,GAAA,OAAA3C,eAAA2C,IACAC,eAAA,SAAAD,GAAA,OAAAE,eAAAF,UClKkW,I,yBCQ9VG,EAAY,eACd,EACA1F,EACAwB,GACA,EACA,KACA,WACA,MAIa,aAAAkE,E,4CCnBf","file":"js/chunk-781da5fb.d0307276.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"covid-stats-wrapper\"},[(_vm.basicStats)?_c('div',{staticClass:\"basic-stats\"},[_c('div',{staticClass:\"active-cases stat-wrap\"},[_c('span',{staticClass:\"lbl\"},[_vm._v(\"Active Cases\")]),_c('span',{staticClass:\"val\"},[_vm._v(_vm._s(_vm._f(\"numberFormat\")(_vm.basicStats.active)))])]),_c('div',{staticClass:\"more-stats\"},[_c('div',{staticClass:\"stat-wrap\"},[_c('span',{staticClass:\"lbl\"},[_vm._v(\"Total Confirmed\")]),_c('span',{staticClass:\"val total\"},[_vm._v(_vm._s(_vm._f(\"numberFormat\")(_vm.basicStats.cases)))])]),_c('div',{staticClass:\"stat-wrap\"},[_c('span',{staticClass:\"lbl\"},[_vm._v(\"Total Recovered\")]),_c('span',{staticClass:\"val recovered\"},[_vm._v(_vm._s(_vm._f(\"numberFormat\")(_vm.basicStats.recovered)))])]),_c('div',{staticClass:\"stat-wrap\"},[_c('span',{staticClass:\"lbl\"},[_vm._v(\"Total Deaths\")]),_c('span',{staticClass:\"val deaths\"},[_vm._v(_vm._s(_vm._f(\"numberFormat\")(_vm.basicStats.deaths)))])])])]):_vm._e(),(_vm.showChart)?_c('div',{staticClass:\"case-history-chart\",attrs:{\"id\":_vm.chartId}}):_vm._e(),(_vm.countryData)?_c('div',{staticClass:\"country-data\"},_vm._l((_vm.countryData),function(country){return _c('div',{key:country.name,staticClass:\"country-row\"},[_c('p',{staticClass:\"name\"},[_c('img',{staticClass:\"flag\",attrs:{\"src\":country.flag,\"alt\":\"Flag\"}}),_vm._v(\" \"+_vm._s(country.name)+\" \")]),_c('div',{staticClass:\"country-case-wrap\"},[_c('div',{staticClass:\"stat-wrap\"},[_c('span',{staticClass:\"lbl\"},[_vm._v(\"Confirmed\")]),_c('span',{staticClass:\"val total\"},[_vm._v(_vm._s(_vm._f(\"showInK\")(country.cases)))])]),_c('div',{staticClass:\"stat-wrap\"},[_c('span',{staticClass:\"lbl\"},[_vm._v(\"Recovered\")]),_c('span',{staticClass:\"val recovered\"},[_vm._v(_vm._s(_vm._f(\"showInK\")(country.recovered)))])]),_c('div',{staticClass:\"stat-wrap\"},[_c('span',{staticClass:\"lbl\"},[_vm._v(\"Deaths\")]),_c('span',{staticClass:\"val deaths\"},[_vm._v(_vm._s(_vm._f(\"showInK\")(country.deaths)))])])])])}),0):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"covid-stats-wrapper\">\n  <div class=\"basic-stats\" v-if=\"basicStats\">\n    <div class=\"active-cases stat-wrap\">\n      <span class=\"lbl\">Active Cases</span>\n      <span class=\"val\">{{ basicStats.active | numberFormat }}</span>\n    </div>\n    <div class=\"more-stats\">\n      <div class=\"stat-wrap\">\n        <span class=\"lbl\">Total Confirmed</span>\n        <span class=\"val total\">{{ basicStats.cases | numberFormat }}</span>\n      </div>\n      <div class=\"stat-wrap\">\n        <span class=\"lbl\">Total Recovered</span>\n        <span class=\"val recovered\">{{ basicStats.recovered | numberFormat }}</span>\n      </div>\n      <div class=\"stat-wrap\">\n        <span class=\"lbl\">Total Deaths</span>\n        <span class=\"val deaths\">{{ basicStats.deaths | numberFormat }}</span>\n      </div>\n    </div>\n  </div>\n  <!-- Chart -->\n  <div class=\"case-history-chart\" :id=\"chartId\" v-if=\"showChart\"></div>\n  <!-- Country Data -->\n  <div class=\"country-data\" v-if=\"countryData\">\n    <div class=\"country-row\" v-for=\"country in countryData\" :key=\"country.name\">\n      <p class=\"name\">\n        <img :src=\"country.flag\" alt=\"Flag\" class=\"flag\" />\n        {{ country.name }}\n      </p>\n      <div class=\"country-case-wrap\">\n        <div class=\"stat-wrap\">\n          <span class=\"lbl\">Confirmed</span>\n          <span class=\"val total\">{{ country.cases | showInK }}</span>\n        </div>\n        <div class=\"stat-wrap\">\n          <span class=\"lbl\">Recovered</span>\n          <span class=\"val recovered\">{{ country.recovered | showInK }}</span>\n        </div>\n        <div class=\"stat-wrap\">\n          <span class=\"lbl\">Deaths</span>\n          <span class=\"val deaths\">{{ country.deaths | showInK }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport WidgetMixin from '@/mixins/WidgetMixin';\nimport ChartingMixin from '@/mixins/ChartingMixin';\nimport { putCommasInBigNum, showNumAsThousand, timestampToDate } from '@/utils/MiscHelpers';\nimport { widgetApiEndpoints } from '@/utils/defaults';\n\nexport default {\n  mixins: [WidgetMixin, ChartingMixin],\n  computed: {\n    showChart() {\n      return this.options.showChart || false;\n    },\n    showCountries() {\n      if (this.options.countries) return true;\n      return this.options.showCountries;\n    },\n    numDays() {\n      return this.options.numDays || 120;\n    },\n    countries() {\n      return this.options.countries;\n    },\n    limit() {\n      return this.options.limit || 15;\n    },\n    basicStatsEndpoint() {\n      return `${widgetApiEndpoints.covidStats}/all`;\n    },\n    timeSeriesEndpoint() {\n      return `${widgetApiEndpoints.covidStats}/historical/all?lastdays=${this.numDays}`;\n    },\n    countryInfoEndpoint() {\n      return 'https://covidapi.yubrajpoudel.com.np/stat';\n    },\n  },\n  data() {\n    return {\n      basicStats: null,\n      countryData: null,\n    };\n  },\n  filters: {\n    numberFormat(caseNumber) {\n      return putCommasInBigNum(caseNumber);\n    },\n    showInK(caseNumber) {\n      return showNumAsThousand(caseNumber);\n    },\n  },\n  methods: {\n    fetchData() {\n      this.makeRequest(this.basicStatsEndpoint).then(this.processBasicStats);\n      if (this.showChart) {\n        this.makeRequest(this.timeSeriesEndpoint).then(this.processTimeSeries);\n      }\n      if (this.showCountries) {\n        this.makeRequest(this.countryInfoEndpoint).then(this.processCountryInfo);\n      }\n    },\n    processBasicStats(data) {\n      this.basicStats = data;\n    },\n    processCountryInfo(data) {\n      const countryData = [];\n      data.forEach((country) => {\n        const iso = country.countryInfo.iso3;\n        if (!this.countries || this.countries.includes(iso)) {\n          countryData.push({\n            name: country.country,\n            flag: country.countryInfo.flag,\n            cases: country.cases,\n            deaths: country.deaths,\n            recovered: country.recovered,\n          });\n        }\n      });\n      this.countryData = countryData.slice(0, this.limit);\n    },\n    processTimeSeries(data) {\n      const timeLabels = Object.keys(data.cases);\n      const totalCases = [];\n      const totalDeaths = [];\n      const totalRecovered = [];\n      timeLabels.forEach((date) => {\n        totalCases.push(data.cases[date]);\n        totalDeaths.push(data.deaths[date]);\n        totalRecovered.push(data.recovered[date]);\n      });\n      const chartData = {\n        labels: timeLabels,\n        datasets: [\n          { name: 'Cases', type: 'bar', values: totalCases },\n          { name: 'Recovered', type: 'bar', values: totalRecovered },\n          { name: 'Deaths', type: 'bar', values: totalDeaths },\n        ],\n      };\n      return new this.Chart(`#${this.chartId}`, {\n        title: 'Cases, Recoveries and Deaths',\n        data: chartData,\n        type: 'axis-mixed',\n        height: this.chartHeight,\n        colors: ['#f6f000', '#20e253', '#f80363'],\n        truncateLegends: true,\n        lineOptions: {\n          hideDots: 1,\n        },\n        axisOptions: {\n          xIsSeries: true,\n          xAxisMode: 'tick',\n        },\n        tooltipOptions: {\n          formatTooltipY: d => putCommasInBigNum(d),\n          formatTooltipX: d => timestampToDate(d),\n        },\n      });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.covid-stats-wrapper {\n  .basic-stats {\n    padding: 0.5rem 0;\n    margin: 0.5rem 0;\n    background: var(--widget-accent-color);\n    border-radius: var(--curve-factor);\n  }\n  .country-row {\n    display: flex;\n    justify-content: space-between;\n    p.name {\n      display: flex;\n      align-items: center;\n      margin: 0.5rem 0;\n      color: var(--widget-text-color);\n      img.flag {\n        width: 2.5rem;\n        height: 1.5rem;\n        margin-right: 0.5rem;\n        border-radius: var(--curve-factor);\n      }\n    }\n    .country-case-wrap {\n      min-width: 60%;\n    }\n    &:not(:last-child) { border-bottom: 1px dashed var(--widget-text-color); }\n  }\n  .stat-wrap {\n      color: var(--widget-text-color);\n      display: flex;\n      flex-direction: column;\n      width: 33%;\n      margin: 0.25rem auto;\n      text-align: center;\n      cursor: default;\n      span.lbl {\n        font-size: 0.8rem;\n        opacity: var(--dimming-factor);\n      }\n      span.val {\n        font-weight: bold;\n        margin: 0.1rem 0;\n        font-family: var(--font-monospace);\n        &.total { color: var(--warning); }\n        &.recovered { color: var(--success); }\n        &.deaths { color: var(--danger); }\n      }\n      &.active-cases {\n        span.lbl { font-size: 1.1rem; }\n        span.val { font-size: 1.3rem; }\n      }\n    }\n    .more-stats, .country-case-wrap {\n      display: flex;\n      justify-content: space-around;\n    }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CovidStats.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CovidStats.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./CovidStats.vue?vue&type=template&id=656dc482&scoped=true\"\nimport script from \"./CovidStats.vue?vue&type=script&lang=js\"\nexport * from \"./CovidStats.vue?vue&type=script&lang=js\"\nimport style0 from \"./CovidStats.vue?vue&type=style&index=0&id=656dc482&prod&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"656dc482\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CovidStats.vue?vue&type=style&index=0&id=656dc482&prod&scoped=true&lang=scss\""],"sourceRoot":""}