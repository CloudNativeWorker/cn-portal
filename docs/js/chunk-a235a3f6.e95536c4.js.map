{"version":3,"sources":["webpack:///./src/components/Widgets/CodeStats.vue?6053","webpack:///./src/components/Widgets/CodeStats.vue","webpack:///src/components/Widgets/CodeStats.vue","webpack:///./src/components/Widgets/CodeStats.vue?b236","webpack:///./src/components/Widgets/CodeStats.vue?251d"],"names":["render","_vm","this","_c","_self","staticClass","basicInfo","hideMeta","_v","_s","username","level","_f","totalXp","newXp","_e","attrs","concat","chartId","staticRenderFns","mixins","WidgetMixin","ChartingMixin","data","computed","options","error","hostname","widgetApiEndpoints","codeStats","hideHistory","hideLanguages","hideMachines","monthsToShow","endpoint","chartStartDate","now","Date","setMonth","getMonth","filters","formatTotalXp","bigNum","showNumAsThousand","formatNewXp","putCommasInBigNum","methods","fetchData","_this","axios","get","then","response","processData","catch","dataFetchError","finally","finishLoading","user","makeLevel","total_xp","new_xp","langLabels","langXpValues","Object","keys","languages","forEach","lang","push","xps","languagesPieData","labels","datasets","values","drawLanguagePieChart","xpHistoryChartData","dates","date","timestamp","Math","round","getTime","drawXpHistoryChart","machinesLabels","machinesXpValues","machines","machine","machinesPercentageData","drawMachinesPercentageChart","Chart","title","type","height","strokeWidth","tooltipOptions","formatTooltipY","d","xpHistoryData","dataPoints","start","end","discreteDomains","radius","colors","machineChartData","xp","component"],"mappings":"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","file":"js/chunk-a235a3f6.e95536c4.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CodeStats.vue?vue&type=style&index=0&id=294758a4&prod&scoped=true&lang=scss\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"code-stats-wrapper\"},[(_vm.basicInfo && !_vm.hideMeta)?_c('div',{staticClass:\"user-meta\"},[_c('div',{staticClass:\"user-info-wrap\"},[_c('p',{staticClass:\"username\"},[_vm._v(_vm._s(_vm.basicInfo.username))]),_c('p',{staticClass:\"user-level\"},[_vm._v(_vm._s(_vm.basicInfo.level))])]),_c('div',{staticClass:\"total-xp-wrap\"},[_c('p',{staticClass:\"total-xp\"},[_vm._v(_vm._s(_vm._f(\"formatTotalXp\")(_vm.basicInfo.totalXp)))]),_c('p',{staticClass:\"new-xp\"},[_vm._v(_vm._s(_vm._f(\"formatNewXp\")(_vm.basicInfo.newXp)))])])]):_vm._e(),_c('div',{staticClass:\"xp-heat-chart\",attrs:{\"id\":`xp-history-${_vm.chartId}`}}),_c('div',{staticClass:\"language-pie-chart\",attrs:{\"id\":`languages-${_vm.chartId}`}}),_c('div',{staticClass:\"machine-percentage-chart\",attrs:{\"id\":`machines-${_vm.chartId}`}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"code-stats-wrapper\">\n  <!-- User Info -->\n  <div class=\"user-meta\" v-if=\"basicInfo && !hideMeta\">\n    <div class=\"user-info-wrap\">\n      <p class=\"username\">{{ basicInfo.username }}</p>\n      <p class=\"user-level\">{{ basicInfo.level }}</p>\n    </div>\n    <div class=\"total-xp-wrap\">\n      <p class=\"total-xp\">{{ basicInfo.totalXp | formatTotalXp }}</p>\n      <p class=\"new-xp\">{{ basicInfo.newXp | formatNewXp }}</p>\n    </div>\n  </div>\n  <!-- XP History Heatmap -->\n  <div :id=\"`xp-history-${chartId}`\" class=\"xp-heat-chart\"></div>\n  <!-- Language Breakdown -->\n  <div :id=\"`languages-${chartId}`\" class=\"language-pie-chart\"></div>\n  <!-- Machines Percentage -->\n  <div :id=\"`machines-${chartId}`\" class=\"machine-percentage-chart\"></div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport WidgetMixin from '@/mixins/WidgetMixin';\nimport ChartingMixin from '@/mixins/ChartingMixin';\nimport { widgetApiEndpoints } from '@/utils/defaults';\nimport { putCommasInBigNum, showNumAsThousand } from '@/utils/MiscHelpers';\n\nexport default {\n  mixins: [WidgetMixin, ChartingMixin],\n  data() {\n    return {\n      basicInfo: null,\n    };\n  },\n  computed: {\n    /* The username to fetch data from - REQUIRED */\n    username() {\n      if (!this.options.username) this.error('You must specify a username');\n      return this.options.username;\n    },\n    /* Optionally override hostname, if using a self-hosted instance */\n    hostname() {\n      if (this.options.hostname) return this.options.hostname;\n      return widgetApiEndpoints.codeStats;\n    },\n    hideMeta() {\n      return this.options.hideMeta || false;\n    },\n    hideHistory() {\n      return this.options.hideHistory || false;\n    },\n    hideLanguages() {\n      return this.options.hideLanguages || false;\n    },\n    hideMachines() {\n      return this.options.hideMachines || false;\n    },\n    monthsToShow() {\n      return this.options.monthsToShow || 5;\n    },\n    endpoint() {\n      return `${this.hostname}/api/users/${this.username}`;\n    },\n    chartStartDate() {\n      const now = new Date();\n      return new Date((now.setMonth(now.getMonth() - this.monthsToShow)));\n    },\n  },\n  filters: {\n    formatTotalXp(bigNum) {\n      return showNumAsThousand(bigNum);\n    },\n    formatNewXp(newXp) {\n      return `+${putCommasInBigNum(newXp)} XP`;\n    },\n  },\n  methods: {\n    /* Make GET request to CoinGecko API endpoint */\n    fetchData() {\n      axios.get(this.endpoint)\n        .then((response) => {\n          this.processData(response.data);\n        })\n        .catch((dataFetchError) => {\n          this.error('Unable to fetch data from CodeStats.net', dataFetchError);\n        })\n        .finally(() => {\n          this.finishLoading();\n        });\n    },\n    /* Assign data variables to the returned data */\n    processData(data) {\n      // Make basic info data\n      if (!this.hideMeta) {\n        this.basicInfo = {\n          username: data.user,\n          level: this.makeLevel(data.total_xp),\n          totalXp: data.total_xp,\n          newXp: data.new_xp,\n        };\n      }\n      // Make language breakdown pie chart data\n      if (!this.hideLanguages) {\n        const langLabels = [];\n        const langXpValues = [];\n        Object.keys(data.languages).forEach((lang) => {\n          langLabels.push(lang);\n          langXpValues.push(data.languages[lang].xps);\n        });\n        const languagesPieData = {\n          labels: langLabels,\n          datasets: [{ values: langXpValues }],\n        };\n        this.drawLanguagePieChart(languagesPieData);\n      }\n      // Make day-by-day historical XP heat chart data\n      if (!this.hideHistory) {\n        const xpHistoryChartData = {};\n        Object.keys(data.dates).forEach((date) => {\n          const timestamp = Math.round(new Date(date).getTime() / 1000);\n          xpHistoryChartData[timestamp] = data.dates[date];\n        });\n        this.drawXpHistoryChart(xpHistoryChartData);\n      }\n      // Make machine proportion percentage chart data\n      if (!this.hideMachines) {\n        const machinesLabels = [];\n        const machinesXpValues = [];\n        Object.keys(data.machines).forEach((machine) => {\n          machinesLabels.push(machine);\n          machinesXpValues.push(data.machines[machine].xps);\n        });\n        const machinesPercentageData = {\n          labels: machinesLabels,\n          datasets: [{ values: machinesXpValues }],\n        };\n        this.drawMachinesPercentageChart(machinesPercentageData);\n      }\n    },\n    drawLanguagePieChart(languagesPieData) {\n      return new this.Chart(`#languages-${this.chartId}`, {\n        title: 'Languages',\n        type: 'donut',\n        data: languagesPieData,\n        height: 250,\n        strokeWidth: 15,\n        tooltipOptions: {\n          formatTooltipY: d => showNumAsThousand(d),\n        },\n      });\n    },\n    drawXpHistoryChart(xpHistoryData) {\n      return new this.Chart(`#xp-history-${this.chartId}`, {\n        title: 'Historical XP',\n        type: 'heatmap',\n        data: {\n          dataPoints: xpHistoryData,\n          start: this.chartStartDate,\n          end: new Date(),\n        },\n        discreteDomains: 0,\n        radius: 2,\n        colors: ['#caf0f8', '#48cae4', '#0077b6', '#023e8a', '#090a79'],\n      });\n    },\n    drawMachinesPercentageChart(machineChartData) {\n      return new this.Chart(`#machines-${this.chartId}`, {\n        title: 'Machines',\n        type: 'percentage',\n        data: machineChartData,\n        height: 180,\n        strokeWidth: 15,\n        tooltipOptions: {\n          formatTooltipY: d => showNumAsThousand(d),\n        },\n        colors: ['#f9c80e', '#43bccd', '#ea3546', '#662e9b', '#f86624'],\n      });\n    },\n    /* Given a users XP score, return text level */\n    makeLevel(xp) {\n      if (xp < 100) return 'New Joiner';\n      if (xp < 1000) return 'Noob';\n      if (xp < 10000) return 'Intermediate';\n      if (xp < 50000) return 'Code ninja in the making';\n      if (xp < 100000) return 'Expert Developer';\n      if (xp < 500000) return 'Ultra Expert Developer';\n      if (xp < 1000000) return 'Code Super Hero';\n      if (xp < 1500000) return 'Super Epic Code Hero';\n      if (xp >= 15000000) return 'God Level';\n      return xp;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.code-stats-wrapper {\n  p {\n    margin: 0;\n    font-size: 1rem;\n    color: var(--widget-text-color);\n  }\n  .user-meta {\n    display: flex;\n    margin: 0.5rem;\n    padding: 0.5rem 0;\n    border-bottom: 1px dashed var(--widget-text-color);\n    justify-content: space-between;\n    .user-info-wrap {\n      .username {\n        font-size: 1.4rem;\n        text-transform: capitalize;\n      }\n      .user-level {\n        font-size: 0.8rem;\n        text-transform: capitalize;\n        opacity: var(--dimming-factor);\n        color: var(--widget-text-color);\n      }\n    }\n    .total-xp-wrap {\n      display: flex;\n      align-items: flex-start;\n      .total-xp {\n        font-size: 1.4rem;\n        font-family: var(--font-monospace);\n      }\n      .new-xp {\n        font-size: 0.8rem;\n        margin: 0 0 0 0.5rem;\n        color: var(--success);\n        font-family: var(--font-monospace);\n      }\n    }\n  }\n  .xp-heat-chart,\n  .language-pie-chart,\n  .machine-percentage-chart {\n    &:not(:last-child) { border-bottom: 1px dashed var(--widget-text-color); }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CodeStats.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CodeStats.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./CodeStats.vue?vue&type=template&id=294758a4&scoped=true\"\nimport script from \"./CodeStats.vue?vue&type=script&lang=js\"\nexport * from \"./CodeStats.vue?vue&type=script&lang=js\"\nimport style0 from \"./CodeStats.vue?vue&type=style&index=0&id=294758a4&prod&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"294758a4\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}