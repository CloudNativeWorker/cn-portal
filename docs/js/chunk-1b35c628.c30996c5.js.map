{"version":3,"sources":["webpack:///./src/mixins/WidgetMixin.js","webpack:///./src/components/Widgets/GlCpuTemp.vue","webpack:///src/components/Widgets/GlCpuTemp.vue","webpack:///./src/components/Widgets/GlCpuTemp.vue?0bfd","webpack:///./src/components/Widgets/GlCpuTemp.vue?70a1","webpack:///./src/components/Widgets/GlCpuTemp.vue?9271","webpack:///./src/mixins/GlancesMixin.js"],"names":["WidgetMixin","props","options","type","Object","default","data","progress","Progress","color","overrideProxyChoice","overrideUpdateInterval","disableLoader","updater","defaultTimeout","mounted","this","fetchData","updateInterval","continuousUpdates","beforeDestroy","clearInterval","computed","proxyReqEndpoint","baseUrl","process","VUE_APP_DOMAIN","window","location","origin","concat","serviceEndpoints","corsProxy","useProxy","usersInterval","methods","update","startLoading","_this","setInterval","error","msg","stackTrace","ErrorHandler","ignoreErrors","$emit","start","finishLoading","_this2","setTimeout","end","tooltip","content","html","arguments","length","undefined","trigger","delay","makeRequest","endpoint","protocol","body","_this3","method","url","JSON","stringify","CustomHeaders","headers","timeout","requestConfig","Promise","resolve","reject","axios","request","then","response","success","message","catch","dataFetchError","finally","render","_vm","_c","_self","tempData","staticClass","_l","sensor","key","label","_v","_s","_f","class","value","unit","_e","staticRenderFns","mixins","GlancesMixin","noResults","makeGlancesUrl","filters","formatLbl","lbl","capitalize","formatVal","val","Math","round","getDesiredUnits","_this$options$units","units","getDisplayValue","rawValue","desiredUnits","fahrenheitToCelsius","celsiusToFahrenheit","getCelsiusValue","Number","NaN","getFahrenheitValue","getTempColor","temp","getPercentageColor","percentage","processData","sensorData","map","processTemperatureSensor","processFanSensor","processBatterySensor","console","warn","filter","Boolean","_ref","_ref2","_ref3","originalValue","celsiusValue","displayValue","displayUnits","component","hostname","apiVersion","credentials","username","password","stringifiedUser","Authorization","btoa","apiPath"],"mappings":"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","file":"js/chunk-1b35c628.c30996c5.js","sourcesContent":["/**\n * Mixin that all pre-built and custom widgets extend from.\n * Manages loading state, error handling, data updates and user options\n */\nimport axios from 'axios';\nimport { Progress } from 'rsup-progress';\nimport ErrorHandler from '@/utils/ErrorHandler';\nimport { serviceEndpoints } from '@/utils/defaults';\n\nconst WidgetMixin = {\n  props: {\n    options: {\n      type: Object,\n      default: {},\n    },\n  },\n  data: () => ({\n    progress: new Progress({ color: 'var(--progress-bar)' }),\n    overrideProxyChoice: false,\n    overrideUpdateInterval: null,\n    disableLoader: false, // Prevent ever showing the loader\n    updater: null, // Stores interval\n    defaultTimeout: 50000,\n  }),\n  /* When component mounted, fetch initial data */\n  mounted() {\n    this.fetchData();\n    if (this.updateInterval) {\n      this.continuousUpdates();\n      this.disableLoader = true;\n    }\n  },\n  beforeDestroy() {\n    if (this.updater) {\n      clearInterval(this.updater);\n    }\n  },\n  computed: {\n    proxyReqEndpoint() {\n      const baseUrl = process.env.VUE_APP_DOMAIN || window.location.origin;\n      return `${baseUrl}${serviceEndpoints.corsProxy}`;\n    },\n    useProxy() {\n      return this.options.useProxy || this.overrideProxyChoice;\n    },\n    /* Returns either a number in ms to continuously update widget data. Or 0 for no updates */\n    updateInterval() {\n      const usersInterval = this.options.updateInterval;\n      if (usersInterval === null && this.overrideUpdateInterval) {\n        return this.overrideUpdateInterval * 1000;\n      }\n      if (!usersInterval) return 0;\n      // If set to `true`, then default to 30 seconds\n      if (typeof usersInterval === 'boolean') return 30 * 1000;\n      // If set to a number, and within valid range, return user choice\n      if (typeof usersInterval === 'number'\n        && usersInterval >= 2\n        && usersInterval <= 7200) {\n        return usersInterval * 1000;\n      }\n      return 0;\n    },\n  },\n  methods: {\n    /* Re-fetches external data, called by parent. Usually overridden by widget */\n    update() {\n      this.startLoading();\n      this.fetchData();\n    },\n    /* If continuous updates enabled, create interval */\n    continuousUpdates() {\n      this.updater = setInterval(() => { this.update(); }, this.updateInterval);\n    },\n    /* Called when an error occurs. Logs to handler, and passes to parent component */\n    error(msg, stackTrace) {\n      ErrorHandler(msg, stackTrace);\n      if (!this.options.ignoreErrors) {\n        this.$emit('error', msg);\n      }\n    },\n    /* When a data request update starts, show loader */\n    startLoading() {\n      if (!this.disableLoader) {\n        this.$emit('loading', true);\n        this.progress.start();\n      }\n    },\n    /* When a data request finishes, hide loader */\n    finishLoading() {\n      this.$emit('loading', false);\n      setTimeout(() => { this.progress.end(); }, 500);\n    },\n    /* Overridden by child component. Will make network request, then end loader */\n    fetchData() {\n      this.finishLoading();\n    },\n    /* Used as v-tooltip, pass text content in, and will show on hover */\n    tooltip(content, html = false) {\n      return {\n        content, html, trigger: 'hover focus', delay: 250,\n      };\n    },\n    /* Makes data request, returns promise */\n    makeRequest(endpoint, options, protocol, body) {\n      // Request Options\n      const method = protocol || 'GET';\n      const url = this.useProxy ? this.proxyReqEndpoint : endpoint;\n      const data = JSON.stringify(body || {});\n      const CustomHeaders = options || null;\n      const headers = this.useProxy\n        ? { 'Target-URL': endpoint, CustomHeaders: JSON.stringify(CustomHeaders) } : CustomHeaders;\n      const timeout = this.options.timeout || this.defaultTimeout;\n      const requestConfig = {\n        method, url, headers, data, timeout,\n      };\n      // Make request\n      return new Promise((resolve, reject) => {\n        axios.request(requestConfig)\n          .then((response) => {\n            if (response.data.success === false) {\n              this.error('Proxy returned error from target server', response.data.message);\n            }\n            resolve(response.data);\n          })\n          .catch((dataFetchError) => {\n            this.error('Unable to fetch data', dataFetchError);\n            reject(dataFetchError);\n          })\n          .finally(() => {\n            this.finishLoading();\n          });\n      });\n    },\n  },\n};\n\nexport default WidgetMixin;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.tempData)?_c('div',{staticClass:\"glances-temp-wrapper\"},_vm._l((_vm.tempData),function(sensor){return _c('div',{key:sensor.label,staticClass:\"temp-row\"},[_c('p',{staticClass:\"label\"},[_vm._v(_vm._s(_vm._f(\"formatLbl\")(sensor.label)))]),_c('p',{class:`temp range-${sensor.color}`},[_vm._v(_vm._s(_vm._f(\"formatVal\")(sensor.value,sensor.unit)))])])}),0):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"glances-temp-wrapper\" v-if=\"tempData\">\n  <div class=\"temp-row\" v-for=\"sensor in tempData\" :key=\"sensor.label\">\n    <p class=\"label\">{{ sensor.label | formatLbl }}</p>\n    <p :class=\"`temp range-${sensor.color}`\">{{ sensor.value | formatVal(sensor.unit) }}</p>\n  </div>\n</div>\n</template>\n\n<script>\nimport WidgetMixin from '@/mixins/WidgetMixin';\nimport GlancesMixin from '@/mixins/GlancesMixin';\nimport { capitalize, celsiusToFahrenheit, fahrenheitToCelsius } from '@/utils/MiscHelpers';\n\nexport default {\n  mixins: [WidgetMixin, GlancesMixin],\n  data() {\n    return {\n      tempData: null,\n      noResults: false,\n    };\n  },\n  computed: {\n    endpoint() {\n      return this.makeGlancesUrl('sensors');\n    },\n  },\n  filters: {\n    formatLbl(lbl) {\n      return capitalize(lbl);\n    },\n    formatVal(val, unit) {\n      switch (unit) {\n        case 'R':\n          return `${Math.round(val)} rpm`;\n        case '%':\n          return `${Math.round(val)}%`;\n        default:\n          return `${Math.round(val)}°${unit}`;\n      }\n    },\n  },\n  methods: {\n    getDesiredUnits() {\n      return this.options.units ?? 'C';\n    },\n    getDisplayValue(rawValue, units) {\n      const desiredUnits = this.getDesiredUnits();\n      if (units === desiredUnits) {\n        return rawValue;\n      }\n\n      return desiredUnits === 'C'\n        ? fahrenheitToCelsius(rawValue)\n        : celsiusToFahrenheit(rawValue);\n    },\n    getCelsiusValue(rawValue, units) {\n      if (units !== 'F' && units !== 'C') {\n        return Number.NaN;\n      }\n\n      return units === 'C' ? rawValue : fahrenheitToCelsius(rawValue);\n    },\n    getFahrenheitValue(rawValue, units) {\n      if (units !== 'F' && units !== 'C') {\n        return Number.NaN;\n      }\n\n      return units === 'F' ? rawValue : celsiusToFahrenheit(rawValue);\n    },\n    getTempColor(temp) {\n      if (temp <= 50) return 'green';\n      if (temp > 50 && temp < 75) return 'yellow';\n      if (temp >= 75) return 'red';\n      return 'grey';\n    },\n    getPercentageColor(percentage) {\n      if (percentage < 20) return 'red';\n      if (percentage < 50) return 'orange';\n      if (percentage < 75) return 'yellow';\n      return 'green';\n    },\n    processData(sensorData) {\n      this.tempData = sensorData.map(sensor => {\n        switch (sensor.unit) {\n          case 'F':\n          case 'C':\n            return this.processTemperatureSensor(sensor);\n          case 'R':\n            return this.processFanSensor(sensor);\n          case '%':\n            return this.processBatterySensor(sensor);\n          default:\n            // Justification: This is a recoverable error that developers\n            // should nevertheless be warned about.\n            // eslint-disable-next-line\n            console.warn('Unrecognized unit', sensor.unit);\n            return null;\n        }\n      }).filter(Boolean);\n    },\n    processBatterySensor({ label, unit, value }) {\n      const color = this.getPercentageColor(value);\n      return {\n        color,\n        label,\n        unit,\n        value,\n      };\n    },\n    processFanSensor({ label, unit, value }) {\n      return {\n        color: 'grey',\n        label,\n        unit,\n        value,\n      };\n    },\n    processTemperatureSensor({ label, unit, value: originalValue }) {\n      const celsiusValue = this.getCelsiusValue(originalValue, unit);\n      const color = this.getTempColor(celsiusValue);\n      const displayValue = this.getDisplayValue(originalValue, unit);\n      const displayUnits = this.getDesiredUnits();\n\n      return {\n        color,\n        label,\n        unit: displayUnits,\n        value: displayValue,\n      };\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.glances-temp-wrapper {\n  .temp-row {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    p.label {\n      margin: 0.5rem 0;\n      color: var(--widget-text-color);\n    }\n    p.temp {\n      margin: 0.5rem 0;\n      font-size: 1.5rem;\n      font-weight: bold;\n      &.range-green { color: var(--success); }\n      &.range-yellow { color: var(--warning); }\n      &.range-red { color: var(--danger); }\n      &.range-grey { color: var(--medium-grey); }\n    }\n    &:not(:last-child) {\n      border-bottom: 1px dashed var(--widget-text-color);\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GlCpuTemp.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GlCpuTemp.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./GlCpuTemp.vue?vue&type=template&id=52173360&scoped=true\"\nimport script from \"./GlCpuTemp.vue?vue&type=script&lang=js\"\nexport * from \"./GlCpuTemp.vue?vue&type=script&lang=js\"\nimport style0 from \"./GlCpuTemp.vue?vue&type=style&index=0&id=52173360&prod&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"52173360\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GlCpuTemp.vue?vue&type=style&index=0&id=52173360&prod&scoped=true&lang=scss\"","/** Reusable mixin for all Glances widgets */\nexport default {\n  computed: {\n    /* Required, hostname (e.g. IP + port) for Glances instance */\n    hostname() {\n      if (!this.options.hostname) this.error('You must specify a \\'hostname\\' for Glances');\n      return this.options.hostname;\n    },\n    /* Optionally specify the API version, defaults to V 3 */\n    apiVersion() {\n      return this.options.apiVersion || 3;\n    },\n    /* Optionally specify basic auth credentials for Glances instance */\n    credentials() {\n      if (this.options.username && this.options.password) {\n        const stringifiedUser = `${this.options.username}:${this.options.password}`;\n        return { Authorization: `Basic ${window.btoa(stringifiedUser)}` };\n      }\n      return null;\n    },\n  },\n  methods: {\n    /* Make the request to Glances API, and calls handler function with results\n    * Requires endpoint attribute and processData method to be implemented by child */\n    fetchData() {\n      this.makeRequest(this.endpoint, this.credentials).then(this.processData);\n    },\n    /* Returns URL to Glances API endpoint */\n    makeGlancesUrl(apiPath) {\n      return `${this.hostname}/api/${this.apiVersion}/${apiPath}`;\n    },\n  },\n};\n"],"sourceRoot":""}